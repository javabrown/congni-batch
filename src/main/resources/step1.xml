<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:batch="http://www.springframework.org/schema/batch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/batch
    http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
    http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">


	<!-- batch:job id="job" restartable="false" xmlns="http://www.springframework.org/schema/batch">
		<batch:step id="step3">
			<batch:tasklet>
				<batch:chunk reader="planCoverageFileReader" writer="planCoverageWriter"
					commit-interval="2">
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job -->

   <bean id="planCoverageWriter" class="javabrown.cognitest.saver.PlanCoverageSaver" scope="step" />
	    
	<bean id="planCoverageFileReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">

		<!-- Read a csv file -->
		<property name="resource" value="classpath:csv/plan-coverage.csv" />
        <property name="linesToSkip" value="1" />
    
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<!-- split it -->
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names"
							value="mainCategory,subCategory,planId_p001,planId_p002,planId_p003" />
					</bean>
					
				</property>
				
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="planCoverageData" />
					</bean>
				</property>

			</bean>
		</property>
    
	</bean>

	<bean id="planCoverageData" class="javabrown.cognitest.data.mapper.PlanCoverageData" scope="prototype" />

</beans>